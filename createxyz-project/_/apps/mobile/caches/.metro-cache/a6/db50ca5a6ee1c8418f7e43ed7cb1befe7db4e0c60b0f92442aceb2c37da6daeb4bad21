{"dependencies":[{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":24},"end":{"line":2,"column":38,"index":62}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"streamedQuery\", {\n    enumerable: true,\n    get: function () {\n      return streamedQuery;\n    }\n  });\n  var _utilsJs = require(_dependencyMap[0], \"./utils.js\");\n  // src/streamedQuery.ts\n\n  function streamedQuery({\n    queryFn,\n    refetchMode = \"reset\",\n    maxChunks\n  }) {\n    return async context => {\n      const query = context.client.getQueryCache().find({\n        queryKey: context.queryKey,\n        exact: true\n      });\n      const isRefetch = !!query && query.state.data !== void 0;\n      if (isRefetch && refetchMode === \"reset\") {\n        query.setState({\n          status: \"pending\",\n          data: void 0,\n          error: null,\n          fetchStatus: \"fetching\"\n        });\n      }\n      let result = [];\n      const stream = await queryFn(context);\n      for await (const chunk of stream) {\n        if (context.signal.aborted) {\n          break;\n        }\n        if (!isRefetch || refetchMode !== \"replace\") {\n          context.client.setQueryData(context.queryKey, (prev = []) => {\n            return (0, _utilsJs.addToEnd)(prev, chunk, maxChunks);\n          });\n        }\n        result = (0, _utilsJs.addToEnd)(result, chunk, maxChunks);\n      }\n      if (isRefetch && refetchMode === \"replace\" && !context.signal.aborted) {\n        context.client.setQueryData(context.queryKey, result);\n      }\n      return context.client.getQueryData(context.queryKey);\n    };\n  }\n});","lineCount":54,"map":[[7,2,41,0,"Object"],[7,8,41,0],[7,9,41,0,"defineProperty"],[7,23,41,0],[7,24,41,0,"exports"],[7,31,41,0],[8,4,41,0,"enumerable"],[8,14,41,0],[9,4,41,0,"get"],[9,7,41,0],[9,18,41,0,"get"],[9,19,41,0],[10,6,41,0],[10,13,42,2,"streamedQuery"],[10,26,42,15],[11,4,42,15],[12,2,42,15],[13,2,2,0],[13,6,2,0,"_utilsJs"],[13,14,2,0],[13,17,2,0,"require"],[13,24,2,0],[13,25,2,0,"_dependencyMap"],[13,39,2,0],[14,2,1,0],[16,2,3,0],[16,11,3,9,"streamedQuery"],[16,24,3,22,"streamedQuery"],[16,25,3,23],[17,4,4,2,"queryFn"],[17,11,4,9],[18,4,5,2,"refetchMode"],[18,15,5,13],[18,18,5,16],[18,25,5,23],[19,4,6,2,"maxChunks"],[20,2,7,0],[20,3,7,1],[20,5,7,3],[21,4,8,2],[21,11,8,9],[21,17,8,16,"context"],[21,24,8,23],[21,28,8,28],[22,6,9,4],[22,12,9,10,"query"],[22,17,9,15],[22,20,9,18,"context"],[22,27,9,25],[22,28,9,26,"client"],[22,34,9,32],[22,35,9,33,"getQueryCache"],[22,48,9,46],[22,49,9,47],[22,50,9,48],[22,51,9,49,"find"],[22,55,9,53],[22,56,9,54],[23,8,9,56,"queryKey"],[23,16,9,64],[23,18,9,66,"context"],[23,25,9,73],[23,26,9,74,"queryKey"],[23,34,9,82],[24,8,9,84,"exact"],[24,13,9,89],[24,15,9,91],[25,6,9,96],[25,7,9,97],[25,8,9,98],[26,6,10,4],[26,12,10,10,"isRefetch"],[26,21,10,19],[26,24,10,22],[26,25,10,23],[26,26,10,24,"query"],[26,31,10,29],[26,35,10,33,"query"],[26,40,10,38],[26,41,10,39,"state"],[26,46,10,44],[26,47,10,45,"data"],[26,51,10,49],[26,56,10,54],[26,61,10,59],[26,62,10,60],[27,6,11,4],[27,10,11,8,"isRefetch"],[27,19,11,17],[27,23,11,21,"refetchMode"],[27,34,11,32],[27,39,11,37],[27,46,11,44],[27,48,11,46],[28,8,12,6,"query"],[28,13,12,11],[28,14,12,12,"setState"],[28,22,12,20],[28,23,12,21],[29,10,13,8,"status"],[29,16,13,14],[29,18,13,16],[29,27,13,25],[30,10,14,8,"data"],[30,14,14,12],[30,16,14,14],[30,21,14,19],[30,22,14,20],[31,10,15,8,"error"],[31,15,15,13],[31,17,15,15],[31,21,15,19],[32,10,16,8,"fetchStatus"],[32,21,16,19],[32,23,16,21],[33,8,17,6],[33,9,17,7],[33,10,17,8],[34,6,18,4],[35,6,19,4],[35,10,19,8,"result"],[35,16,19,14],[35,19,19,17],[35,21,19,19],[36,6,20,4],[36,12,20,10,"stream"],[36,18,20,16],[36,21,20,19],[36,27,20,25,"queryFn"],[36,34,20,32],[36,35,20,33,"context"],[36,42,20,40],[36,43,20,41],[37,6,21,4],[37,17,21,15],[37,23,21,21,"chunk"],[37,28,21,26],[37,32,21,30,"stream"],[37,38,21,36],[37,40,21,38],[38,8,22,6],[38,12,22,10,"context"],[38,19,22,17],[38,20,22,18,"signal"],[38,26,22,24],[38,27,22,25,"aborted"],[38,34,22,32],[38,36,22,34],[39,10,23,8],[40,8,24,6],[41,8,25,6],[41,12,25,10],[41,13,25,11,"isRefetch"],[41,22,25,20],[41,26,25,24,"refetchMode"],[41,37,25,35],[41,42,25,40],[41,51,25,49],[41,53,25,51],[42,10,26,8,"context"],[42,17,26,15],[42,18,26,16,"client"],[42,24,26,22],[42,25,26,23,"setQueryData"],[42,37,26,35],[42,38,27,10,"context"],[42,45,27,17],[42,46,27,18,"queryKey"],[42,54,27,26],[42,56,28,10],[42,57,28,11,"prev"],[42,61,28,15],[42,64,28,18],[42,66,28,20],[42,71,28,25],[43,12,29,12],[43,19,29,19],[43,23,29,19,"addToEnd"],[43,31,29,27],[43,32,29,27,"addToEnd"],[43,40,29,27],[43,42,29,28,"prev"],[43,46,29,32],[43,48,29,34,"chunk"],[43,53,29,39],[43,55,29,41,"maxChunks"],[43,64,29,50],[43,65,29,51],[44,10,30,10],[44,11,31,8],[44,12,31,9],[45,8,32,6],[46,8,33,6,"result"],[46,14,33,12],[46,17,33,15],[46,21,33,15,"addToEnd"],[46,29,33,23],[46,30,33,23,"addToEnd"],[46,38,33,23],[46,40,33,24,"result"],[46,46,33,30],[46,48,33,32,"chunk"],[46,53,33,37],[46,55,33,39,"maxChunks"],[46,64,33,48],[46,65,33,49],[47,6,34,4],[48,6,35,4],[48,10,35,8,"isRefetch"],[48,19,35,17],[48,23,35,21,"refetchMode"],[48,34,35,32],[48,39,35,37],[48,48,35,46],[48,52,35,50],[48,53,35,51,"context"],[48,60,35,58],[48,61,35,59,"signal"],[48,67,35,65],[48,68,35,66,"aborted"],[48,75,35,73],[48,77,35,75],[49,8,36,6,"context"],[49,15,36,13],[49,16,36,14,"client"],[49,22,36,20],[49,23,36,21,"setQueryData"],[49,35,36,33],[49,36,36,34,"context"],[49,43,36,41],[49,44,36,42,"queryKey"],[49,52,36,50],[49,54,36,52,"result"],[49,60,36,58],[49,61,36,59],[50,6,37,4],[51,6,38,4],[51,13,38,11,"context"],[51,20,38,18],[51,21,38,19,"client"],[51,27,38,25],[51,28,38,26,"getQueryData"],[51,40,38,38],[51,41,38,39,"context"],[51,48,38,46],[51,49,38,47,"queryKey"],[51,57,38,55],[51,58,38,56],[52,4,39,2],[52,5,39,3],[53,2,40,0],[54,0,40,1],[54,3]],"functionMap":{"names":["<global>","streamedQuery","<anonymous>","context.client.setQueryData$argument_1"],"mappings":"AAA;ACE;SCK;UCoB;WDE;GDS;CDC"},"hasCjsExports":false},"type":"js/module"}]}